diff --git a/web/modules/contrib/opigno_statistics/src/Services/UserStatisticsManager.php b/web/modules/contrib/opigno_statistics/src/Services/UserStatisticsManager.php
index 4c2a0b46..7eda1be5 100644
--- a/src/Services/UserStatisticsManager.php
+++ b/src/Services/UserStatisticsManager.php
@@ -709,8 +709,8 @@ public function buildTrainingsList(int $uid, bool $completed = FALSE): array {
         ['data' => $details, 'class' => 'details'],
       ];
       if ($completed) {
-        $timestamp = strtotime($row->completed ?: 'now');
-        $date = $this->dateFormatter->format($timestamp, 'day_month_year');
+        $timestamp = strtotime($row->completed ?? 'now');
+        $date = $this->dateFormatter->format($timestamp, 'custom', 'm/d/Y');
         array_splice($table_row, 2, 0, $date);
       }
 
@@ -734,9 +734,10 @@ public function buildCertificatesList(int $uid): array {
     // Add the share link if social settings enabled and the user is viewing the
     // own profile.
     $sharing_enabled = $this->isSocialsEnabled && $this->currentUid === $uid;
+    $is_own_certificates = $this->currentUid === $uid;
 
     $table_rows = [];
-    $build = [
+     $build = [
       '#type' => 'table',
       '#attributes' => [
         'class' => ['statistics-table', 'certificates-list'],
@@ -744,10 +745,14 @@ public function buildCertificatesList(int $uid): array {
       '#header' => [
         ['data' => $this->t('Name'), 'class' => 'name'],
         ['data' => $this->t('Date'), 'class' => 'date'],
-        ['data' => $this->t('Download'), 'class' => 'hidden'],
       ],
     ];
 
+     // Only add Download header if user can download certificates
+  if ($is_own_certificates) {
+    $header[] = ['data' => $this->t('Download'), 'class' => 'hidden'];
+  }
+
     if (!$rows) {
       return $build + ['#rows' => $table_rows];
     }
@@ -778,13 +783,17 @@ public function buildCertificatesList(int $uid): array {
       $gid = $row->gid ?? 0;
       $name = $this->t('Certificate for @training', ['@training' => $row->name ?? '']);
       $timestamp = strtotime($row->completed ?? 'now');
-      $date = $this->dateFormatter->format($timestamp, 'day_month_year');
+      $date = $this->dateFormatter->format($timestamp, 'custom', 'm/d/Y');
 
       // Generate the certificate download link.
+      $download = [];
+    if ($is_own_certificates) {
       $params = ['entity_type' => 'group', 'entity_id' => $gid];
-      $download = Url::fromRoute('certificate.entity.pdf', $params, $download_options);
-      $download = $download->access() ? Link::fromTextAndUrl($download_title, $download)->toRenderable() : [];
-
+      $download_url = Url::fromRoute('certificate.entity.pdf', $params, $download_options);
+      if ($download_url->access()) {
+        $download = Link::fromTextAndUrl($download_title, $download_url)->toRenderable();
+      }
+    }
       $table_row = [
         ['data' => $name, 'class' => 'name'],
         ['data' => $date, 'class' => 'date'],
